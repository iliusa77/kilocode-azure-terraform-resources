name: Terraform Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment (e.g., dev, stage, prod)"
        required: true
        default: "dev"
      tf_vars:
        description: "Terraform variables in JSON format (e.g. '{\"location\":\"westeurope\",\"project\":\"myapp\"}')"
        required: false
        default: "{}"

permissions:
  contents: read
  id-token: write

env:
  TF_VERSION: 1.8.0
  TF_LOG: INFO
  TF_IN_AUTOMATION: true

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    outputs:
      plan_path: ${{ steps.plan.outputs.plan_path }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Validate
        run: terraform validate

      - name: Create tfvars file from input JSON
        id: tfvars
        run: |
          echo "${{ github.event.inputs.tf_vars }}" | jq -r 'to_entries | map("\(.key) = \"\(.value)\"") | .[]' > input.auto.tfvars
          echo "Generated tfvars:"
          cat input.auto.tfvars

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -var="environment=${{ github.event.inputs.environment }}" -out=tfplan
          echo "plan_path=tfplan" >> $GITHUB_OUTPUT

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  terraform-apply:
    name: Terraform Apply (Protected)
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}
      # ⚠️ Requires manual approval if Environment protection rules are enabled in GitHub Settings
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Terraform Init
        run: terraform init -input=false

      - name: Apply Terraform Plan
        run: terraform apply -auto-approve tfplan
